Web services have been a growing trend (and by trend I mean "buzzword") in the past recent years. Both Microsoft and Sun have tried to implement web services within their new programming languages (ASP.NET and Java respectivly). Web Services are also avaiable in other web programming languages such as PHP. Let's take a look as some web services and how they're implemented in these various languages.

Basically, a web service is a system you can send a function request to using the HTTP protocl and get a response back in a predefined structure. Most web services use some type of XML format to send and get information. Some languages even go to the point of making the requests entirely transparent to the programmer, so all the programmer does is create an instance of an object and call a method on it (similar to RPC: Remote Procedude Calls). To acomplish this, you need a set of predefined formats to transmit and recieve these calls. There are currenly two major XML RPC standards for webservices. They are XML-RPC and SOAP. Although the format and order of function arguments are different, they basically both acomplish the same task.

Like the nature of the web and the HTTP protocol, web services are also intended to be stateless. It's best to think of it as a static function. You send one request to one service with no session information stored about successive requests. 

Now let's examine implementation. In Microsoft's .NET framework, webservices are treated just like local objects. You add a reference to the specific service using the services wsdl file (A discovery file listing all the functionality of the service). The name space for the service is the hostname of the machine the service is located at. Then you simply create an instance of that webservice object and call methods on it as if it were a locally defined object.

To create a webservice in .NET, you simply create a regular Visual Basic or C# class, add certain tag that indicate certain functions are web functions and certain classes are webservices, and then compile it as a webservice and place it in a Microsoft IIS web folder with permission to execute scripts and applications.

The innter working of connection to the webservice, converting function calls to and from XML and HTTP connections are completly abstracted from the programmer. Although it is abstracted, the web service protocol is not properity (unlike everything else that Microsoft produces). They use the open standard SOAP for transmitting objects over the web. Becasue of this, .NET applications can add references from services written in other languages and on other platforms as long as thye conform to the SOAP standard and have a valid wsdl file.

Next, let's look at Java's (J2EE) approach to web services using a web servlet engine. 